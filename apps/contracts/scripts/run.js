const { ethers } = require("hardhat");
const { generateDeposit, exportCallDataGroth16 } = require("../lib/utils");
const ERC20 = require("@openzeppelin/contracts/build/contracts/ERC20.json");

const alicePK = process.env.ALICE_PK;
const bobPK = process.env.BOB_PK;

const tokenAddress = "0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238";
const denomination = "5";
const rcpUrl = "https://rpc.sepolia.org";
const gibscardsAddress = "0x077e1FF0deeD1e94cFf7AF5BFc6dc7b944BFCf17";

async function approveToken(alice) {
  const token = new ethers.Contract(tokenAddress, ERC20.abi, alice);
  const approveTx = await token.approve(gibscardsAddress, 100000000);
  await approveTx.wait();
}

async function makeDeposit(alice, deposit, gibscards) {
  const tx = await gibscards
    .connect(alice)
    .deposit(deposit.commitmentHex, denomination, tokenAddress, {
      gasLimit: 10000000,
    });
  await tx.wait();
  console.log(tx);
}

async function getProof(deposit, bob) {
  const input = {
    nullifierHash: deposit.nullifierHash,
    commitmentHash: deposit.commitment,
    recipient: bob.address,
    nullifier: deposit.nullifier,
    secret: deposit.secret,
  };

  const wasm = "./zkproof/gibscards.wasm";
  const zkey = "./zkproof/gibscards_final.zkey";

  let { a, b, c, Input, proofData } = await exportCallDataGroth16(
    input,
    wasm,
    zkey
  );

  return proofData;
}

const main = async () => {
  const provider = new ethers.JsonRpcProvider(rcpUrl);
  const alice = new ethers.Wallet(alicePK, provider);
  const bob = new ethers.Wallet(bobPK, provider);

  const gibscards = await ethers.getContractAt(
    "Gibscards",
    gibscardsAddress,
    alice
  );

  const deposit = await generateDeposit();

  // const nullifier = BigInt(
  //   "248233066445375946265781730296438129711501373235049205070451601369055133267"
  // );
  // const secret = BigInt(
  //   "107424424118356401700382316670689029594234930858450108832039312150436898547"
  // );
  // const deposit = await createDeposit({ nullifier, secret });

  console.log(deposit);

  // await approveToken(alice);
  await makeDeposit(alice, deposit, gibscards);

  // let result = await gibscards.verifyProof(a, b, c, Input);
  // console.log("Proof valid?: ", result);

  const proofData = await getProof(deposit, bob);

  const withdrawTx = await gibscards
    .connect(bob)
    .withdraw(
      proofData,
      deposit.nullifierHex,
      deposit.commitmentHex,
      bob.address,
      "0x415565b00000000000000000000000001c7d4b196cb0c7b01d743fbc6116a902379c72380000000000000000000000001f9840a85d5af5bf1d1762f925bdaddc4201f9840000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000019f7e2f8300000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000042000000000000000000000000000000000000000000000000000000000000007e0000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000360000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001c7d4b196cb0c7b01d743fbc6116a902379c7238000000000000000000000000fff9976782d46cc05630d1f6ebab18b2324d6b1400000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000320000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000002e00000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000012556e697377617056330000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000003bfa4769fb09eefc5a80d6e87c3b9c650f7ae48e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000002b1c7d4b196cb0c7b01d743fbc6116a902379c72380001f4fff9976782d46cc05630d1f6ebab18b2324d6bfff9976782d46cc05630d1f6ebab18b2324d6b140000000000000000000000001f9840a85d5af5bf1d1762f925bdaddc4201f98400000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000320000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000002e0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000012556e6973776170563300000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000000000000019f7e2f82000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000003bfa4769fb09eefc5a80d6e87c3b9c650f7ae48e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000002bfff9976782d46cc05630d1f6ebab18b2324d6b14000bb81f9840a85d5af5bf1d1762f925bdaddc4201fc000000000000000000000000000000000000000000000000000000000000000030000000000000000000000001c7d4b196cb0c7b01d743fbc6116a902379c7238000000000000000000000000fff9976782d46cc05630d1f6ebab18b2324d6b14000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000000000000000000000000000869584cd000000000000000000000000100000000000000000000000000000000000001100000000000000000000000000000000d82e7ef5d9e71b8f6f16e50aae861379"
    );

  await withdrawTx.wait();
  console.log(withdrawTx);

  // const quoteTx = await gibscards.fillQuote(
  //   "0x1c7d4b196cb0c7b01d743fbc6116a902379c7238",
  //   "0x1f9840a85d5af5bf1d1762f925bdaddc4201f984",
  //   "0xdef1c0ded9bec7f1a1670819833240f027b25eff",
  //   "0xdef1c0ded9bec7f1a1670819833240f027b25eff",
  //   "0x415565b00000000000000000000000001c7d4b196cb0c7b01d743fbc6116a902379c72380000000000000000000000001f9840a85d5af5bf1d1762f925bdaddc4201f9840000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000019f7e581f00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000042000000000000000000000000000000000000000000000000000000000000007e0000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000360000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001c7d4b196cb0c7b01d743fbc6116a902379c7238000000000000000000000000fff9976782d46cc05630d1f6ebab18b2324d6b1400000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000320000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000002e00000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000012556e697377617056330000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000003bfa4769fb09eefc5a80d6e87c3b9c650f7ae48e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000002b1c7d4b196cb0c7b01d743fbc6116a902379c72380001f4fff9976782d46cc05630d1f6ebab18b2324d6bfff9976782d46cc05630d1f6ebab18b2324d6b140000000000000000000000001f9840a85d5af5bf1d1762f925bdaddc4201f98400000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000320000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000002e0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000012556e6973776170563300000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000000000000019f7e581e000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000003bfa4769fb09eefc5a80d6e87c3b9c650f7ae48e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000002bfff9976782d46cc05630d1f6ebab18b2324d6b14000bb81f9840a85d5af5bf1d1762f925bdaddc4201fc000000000000000000000000000000000000000000000000000000000000000030000000000000000000000001c7d4b196cb0c7b01d743fbc6116a902379c7238000000000000000000000000fff9976782d46cc05630d1f6ebab18b2324d6b14000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000000000000000000000000000869584cd0000000000000000000000001000000000000000000000000000000000000011000000000000000000000000000000006367b60cc72583437ebca00712dd6ac8",
  //   {
  //     gasPrice: 1000920000,
  //   }
  // );

  // await quoteTx.wait();
  // console.log(quoteTx);
};

const runMain = async () => {
  try {
    await main();
    process.exit(0);
  } catch (error) {
    console.log(error);
    process.exit(1);
  }
};

runMain();
